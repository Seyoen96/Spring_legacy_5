<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

  <mapper namespace="com.sy.s5.member.MemberDAO">
  
  		<resultMap type="MemberDTO" id="loginResult">
  			<id column="id" property="id"/>	<!-- primary key로 꺼내오는 값인 경우 -->
  			<result column="pwd" property="pwd"/>
  			<result column="name" property="name"/>
  			<result column="email" property="email"/>
  			<result column="phone" property="phone"/>
  			<result column="age" property="age"/>		
  			<!-- 객체가 1개 인 경우   1:1 -->
  			<association property="memberFileDTO" javaType="MemberFileDTO">
  				<result column="fileName" property="fileName"/>
  				<result column="oriName" property="oriName"/>
  			</association>
  		</resultMap>
  		
  		
  		<sql id="search">
  			like '%'||#{search}||'%'
  		</sql>
  		
  	
  	
  	
   	 <select id="memberLogin" parameterType="MemberDTO" resultMap="loginResult">
	  		select M.*, F.fileName, F.oriName
			from member M left join memberFile F
			on (M.id=F.id)
			where M.id =#{id} and M.pwd=#{pwd}
	  </select>
	  
	  <insert id="memberJoin" parameterType="MemberDTO">
	  	insert into member values(#{id}, #{pwd}, #{name}, #{email}, #{phone}, #{age})
	  </insert>
  	
  		
  	  <select id="memberList" parameterType="Pager" resultType="MemberDTO">
  		select * from
			(select M.*, ROWNUM R from
				(select * from member where
				<choose>
					<when test="kind=='ii'">
						id
					</when>
					<when test="kind=='nn'">
						name
					</when>
					<when test="kind=='pp'">
						phone
					</when>
					<otherwise>
						email
					</otherwise>
				</choose>		
				<include refid="search"></include>
				 order by rownum desc) M) 
		where R BETWEEN #{startRow} and #{lastRow}
  		  
  	  </select>
  		
  		
  		<select id="memberCount" parameterType="Pager" resultType="Long">
  			select count(id) from member
  			<where>
  				<if test="kind =='ii'">
  					id <include refid="search"></include>
  				</if>
  				<if test="kind == 'nn'">
  					name <include refid="search"></include>
  				</if>
  				<if test="kind=='pp'">
  					phone <include refid="search"></include>
  				</if>
  				<if test="kind=='ee'">
  					email  <include refid="search"></include>
  				</if>
  			</where>
  		</select>
  		
  
	 
	  <update id="memberUpdate" parameterType="MemberDTO">
	  	 update member set name=#{name}, email=#{email}, phone=#{phone}, age=#{age} where id=#{id}
	  </update>
	  
	  <delete id="memberDelete" parameterType="String">
	  	delete member where id=#{id}
	  </delete>
	  
  </mapper>